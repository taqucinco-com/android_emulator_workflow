name: flutter android emulator
# actで実行する場合は以下のcommandを実行すること
# $ act push --container-architecture=linux/amd64 -W .github/workflows/flutter_analyzer.yaml

on:
  push:
    branches:
      - hoge

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [34]
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: "8.3"

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      # - name: Create AVD
      #   run: |
      #     SYSTEM_IMAGES="system-images;android-${{ matrix.api-level }};default;arm64-v8a"
      #     echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "$SYSTEM_IMAGES"
      #     echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager --verbose create avd -n pixel_6_pro -k "$SYSTEM_IMAGES"

      # - name: Start android emulator
      #   # https://developer.android.com/studio/run/emulator-commandline
      #   run: |
      #     $ANDROID_HOME/emulator/emulator -avd pixel_6_pro -verbose -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim -accel off -no-snapshot-load -no-snapshot-save

      # - name: Wait for boot
      #   run: |
      #     $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 3; done; input keyevent 82'
      #     echo $ANDROID_HOME/emulator/emulator -list-avds
      #     $ANDROID_HOME/platform-tools/adb devices

      # - name: Restart adb server
      #   run: |
      #     $ANDROID_HOME/platform-tools/adb kill-server
      #     echo "Killed adb server"
      #     $ANDROID_HOME/platform-tools/adb start-server
      #     echo "Started adb server"

      - name: Read Flutter version and channel from .fvmrc
        uses: kuhnroyal/flutter-fvm-config-action@v2
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Run Flutter tests
        run: |
          flutter clean
          flutter pub get
        env:
          FLUTTER_ROOT: /opt/hostedtoolcache/flutter

      # - name: Build with Gradle
      #   run: |
      #     pushd android
      #     ./gradlew build
      #     popd

      - name: create AVD and generate snapshot for caching
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: "default"
          arch: "x86_64"
          heap-size: "2048M"
          script: |
            echo "Generated AVD snapshot for caching."
            $ANDROID_HOME/platform-tools/adb devices
            $ANDROID_HOME/emulator/emulator -list-avds
            flutter emulators
            flutter devices
            flutter test integration_test/counter_test.dart -d emulator-5554 --verbose
