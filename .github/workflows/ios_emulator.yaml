# NOTE: このworkflowは未検証です。CI/CD運用のためのテンプレートとして作成しました。
name: release test

on:
  push:
    branches:
      - hoge
env:
  KEYCHAIN_PASSWORD: "P@ssw0rd"

jobs:
  unit_test:
    runs-on: macos-15

    name: Unit Test

    steps:
      - uses: actions/checkout@v2

      # - name: Info Show Xcode list
      #   run: ls /Applications | grep 'Xcode'

      - name: Check Ruby
        run: |
          which ruby
          which pod

      - name: Install rbenv
        run: brew install rbenv

      - name: Check Ruby
        run: |
          echo "$SHELL"
          echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile
          echo 'eval "$(rbenv init - zsh)"' >> ~/.bash_profile
          source ~/.bash_profile
          rbenv init
          which ruby

      # - name: Install Ruby
      #   run: |
      #     rbenv install -s `cat .ruby-version`

      - name: Fix Ruby Version
        run: |
          ruby --version
          which ruby

      # - name: Select Xcode version
      #   run: sudo xcode-select -s '/Applications/Xcode_16.4.app/Contents/Developer'

      # - name: Info Simulator Device Types
      #   run: xcrun simctl list devicetypes

      # - name: Info Simulator Runtimes
      #   run: xcrun simctl list runtimes

      # - name: Info Simulator Lists
      #   run: xcrun simctl list

      # - name: Boot iOS Simulator
      #   run: |
      #     xcrun simctl create "iPhone-16-18.0" "iPhone 16" "com.apple.CoreSimulator.SimRuntime.iOS-18-0"
      #     xcrun simctl boot "iPhone-16-18.0"
      #     xcrun simctl bootstatus "iPhone-16-18.0"

      # - name: Read Flutter version and channel from .fvmrc
      #   uses: kuhnroyal/flutter-fvm-config-action@v3
      # - name: Set up Flutter
      #   uses: subosito/flutter-action@v2
      #   id: flutter-action
      #   with:
      #     flutter-version: ${{ env.FLUTTER_VERSION }}
      #     channel: ${{ env.FLUTTER_CHANNEL }}
      #     cache: true
      # actによる仮想環境での実行したい場合は以下の2行をアンコメントすること
      # https://github.com/subosito/flutter-action/discussions/197#discussioncomment-6431235
      #     architecture: x64
      # - run: git config --global --add safe.directory /opt/hostedtoolcache/flutter/${{ steps.flutter-action.outputs.CHANNEL }}-${{ steps.flutter-action.outputs.VERSION }}-${{ steps.flutter-action.outputs.ARCHITECTURE }}

      # - name: Run Flutter Setup
      #   run: |
      #     flutter clean
      #     flutter pub get
      #   env:
      #     FLUTTER_ROOT: /opt/hostedtoolcache/flutter

      # - name: Device check
      #   run: |
      #     flutter emulators
      #     flutter emulators --launch apple_ios_simulator
      #     flutter devices
      #     flutter test integration_test/counter_test.dart -d 'iPhone-16-18.0' --verbose
